---
- name: Update IDM credentials 
  hosts: idm_nodes
  tags: idm_data_crypt 
  vars:
    curr_pwd: 'openidm-admin'
  become: true

  tasks:
    - block: 
      - name: Create temporary file 1
        shell: mktemp
        register: _FILE1_

      - name: Create temporary file 2
        shell: mktemp
        register: _FILE2_

      - name: Read current token
        shell: echo "current token is {{ curr_pwd }}" 

      - name: Encrypt new token 
        shell: |
          /opt/openidm/cli.sh secureHash "{{ new_pwd }}" |
          egrep -v 'Starting|Executing|\-BEGIN|\-END' |
          tr -d '\n' | tr -d ' '
        register: encrypted

      - name: Save encrypted content to file
        copy:
          content: "{{ encrypted.stdout }}"
          dest: "{{ _FILE1_.stdout }}" 
          mode: 0400

      - name: Get internaluser data
        uri:
          url: 'https://localhost:9443/openidm/internal/user/openidm-admin?_prettyPrint=true'
          headers:
            X-OpenIDM-Username: openidm-admin
            X-OpenIDM-Password: "{{ curr_pwd }}"
          method: GET 
        register: getResponse

      - name: Save json response to file
        copy:
          content: "{{ getResponse.json }}"
          dest: "{{ _FILE2_.stdout }}" 
          mode: 0600

      - name: Modify the json content 
        lineinfile: 
          dest: "{{ _FILE2_.stdout }}" 
          regexp: '(.*)("password".*)("roles".*)'
          line: '\g<1>"password": {{ encrypted.stdout }}, \g<3>' 
          backrefs: true

      - name: Read json content from file
        shell: cat "{{ _FILE2_.stdout }}"
        register: jsonString

      - name: Update internaluser record
        uri:
          url: 'https://localhost:9443/openidm/internal/user/openidm-admin?_prettyPrint=true'
          headers:
            X-OpenIDM-Username: 'openidm-admin'
            X-OpenIDM-Password: "{{ curr_pwd }}"
          method: PUT
          body_format: json
          body: "{{ jsonString.stdout }}"

      - name: Remove temporary files
        file: 
          path: '{{ item }}'
          state: absent 
        with_items:
          - '{{ _FILE1_.stdout }}'
          - '{{ _FILE2_.stdout }}'

      when: label == target_node
